status = warn
name   = BrowserLogConfig

#################################
# Properties
#################################
property.basePath       = test_outputs/logs
property.consolePattern = %highlight{[%p] - [%d{dd-MM-yyyy HH:mm:ss}] [%t] [%c] - %msg}{FATAL=red bold,ERROR=red,WARN=yellow,INFO=blue,DEBUG=green bold,TRACE=black}%n

#################################
# Console Appender
#################################
appender.Console.type               = Console
appender.Console.name               = Console
appender.Console.layout.type        = PatternLayout
appender.Console.layout.disableAnsi = false
appender.Console.layout.pattern     = ${consolePattern}
appender.Console.filter.threshold.type  = ThresholdFilter
appender.Console.filter.threshold.level = debug

#################################
# Routing Appender
#################################
appender.Routing.type            = Routing
appender.Routing.name            = Routing
appender.Routing.routes.type     = Routes
appender.Routing.routes.pattern  = $${ctx:browser:-default}

#------------------------------------------------
# Route 1: Default (when no browser key is set)
#------------------------------------------------
appender.Routing.routes.route1.type           = Route
appender.Routing.routes.route1.key            = default
appender.Routing.routes.route1.appender.type  = RollingFile
appender.Routing.routes.route1.appender.name  = DefaultLog
appender.Routing.routes.route1.appender.fileName     = ${basePath}/log.log
appender.Routing.routes.route1.appender.filePattern  = ${basePath}/log %d{yyyy-MM-dd}-%i.log.gz
appender.Routing.routes.route1.appender.layout.type  = PatternLayout
appender.Routing.routes.route1.appender.layout.pattern = ${consolePattern}
appender.Routing.routes.route1.appender.policies.type        = Policies
appender.Routing.routes.route1.appender.policies.time.type   = TimeBasedTriggeringPolicy
appender.Routing.routes.route1.appender.policies.time.interval = 1
appender.Routing.routes.route1.appender.policies.time.modulate = true
appender.Routing.routes.route1.appender.strategy.type    = DefaultRolloverStrategy
appender.Routing.routes.route1.appender.strategy.max     = 7
appender.Routing.routes.route1.appender.createOnDemand   = true

#------------------------------------------------
# Route 2: Browser-specific (any non-"default" key)
#------------------------------------------------
appender.Routing.routes.route2.type           = Route
appender.Routing.routes.route2.appender.type  = RollingFile
appender.Routing.routes.route2.appender.name  = BrowserLog
appender.Routing.routes.route2.appender.fileName     = ${basePath}/${ctx:browser} ${ctx:datetime}.log
appender.Routing.routes.route2.appender.filePattern  = ${basePath}/${ctx:browser} %d{yyyy-MM-dd}-%i.log.gz
appender.Routing.routes.route2.appender.layout.type  = PatternLayout
appender.Routing.routes.route2.appender.layout.pattern = ${consolePattern}
appender.Routing.routes.route2.appender.policies.type        = Policies
appender.Routing.routes.route2.appender.policies.time.type   = TimeBasedTriggeringPolicy
appender.Routing.routes.route2.appender.policies.time.interval = 1
appender.Routing.routes.route2.appender.policies.time.modulate = true
appender.Routing.routes.route2.appender.strategy.type    = DefaultRolloverStrategy
appender.Routing.routes.route2.appender.strategy.max     = 7
appender.Routing.routes.route2.appender.createOnDemand   = true

#################################
# Root Logger
#################################
rootLogger.level       = info
rootLogger.appenderRefs = Console, Routing
rootLogger.appenderRef.Console.ref  = Console
rootLogger.appenderRef.Routing.ref  = Routing

